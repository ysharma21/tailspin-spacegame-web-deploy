parameters:
- name: subscriptionId
  type: string
  default: 'f3365460-b265-4b58-b696-2d5c99a6235f'
  displayName: 'Azure Subscription ID'
- name: location
  type: string
  default: 'East US'
  displayName: 'Azure Region'
- name: openAIdeploymentName
  type: string
  default: 'testado'
  displayName: 'OpenAI Service Name'
- name: openAISku
  type: string
  default: 'S0'
  displayName: 'OpenAI SKU'

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  displayName: 'Build the Evaluation package'
  jobs:
  - job: Build
    displayName: 'Build the Evaluation package'
    steps:
    - script: |
        mkdir -p $(System.DefaultWorkingDirectory)/evaluation/dist
      displayName: 'Create dist directory'
    - script: |
        python -m venv env
        source env/bin/activate
        pip install -r $(System.DefaultWorkingDirectory)/evaluation/requirements.txt
        pip install wheel
        python $(System.DefaultWorkingDirectory)/evaluation/setup.py sdist bdist_wheel
        echo 'Contents of $(System.DefaultWorkingDirectory)/evaluation/dist:'
        ls $(System.DefaultWorkingDirectory)/evaluation/dist
      displayName: 'Install dependencies, package, and list contents'

    - task: CopyFiles@2
      inputs:
        contents: $(System.DefaultWorkingDirectory)/evaluation/**
        targetFolder: $(Build.ArtifactStagingDirectory)
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: $(Build.ArtifactStagingDirectory)
        artifactName: drop

- stage: Test
  displayName: 'Test the Evaluation package'
  jobs:
  - job: Test
    displayName: 'Test the Evaluation package'
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifactName: 'drop'
        downloadPath: $(System.DefaultWorkingDirectory)
      displayName: 'Download package artifact'
    - script: |
        python -m venv env
        source env/bin/activate
        pip install -r $(System.DefaultWorkingDirectory)/evaluation/requirements.txt
        python $(System.DefaultWorkingDirectory)/evaluation/test_evaluation.py
      displayName: 'Install package and run tests'
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '$(System.DefaultWorkingDirectory)/test-results/*.xml'
        failTaskOnFailedTests: true
      displayName: 'Publish test results'

- stage: DeployOpenAI
  displayName: 'Deploy OpenAI service'
  jobs:
  - job: Deploy
    displayName: 'Deploy OpenAI service'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: '$(subscriptionName)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az deployment group create --resource-group 'rg-openai_steam-dev' --template-file '$(System.DefaultWorkingDirectory)/deployment_ARM_template.json' --parameters subscriptionId='$(subscriptionId)' location='East US' openaiName='$(openAIdeploymentName)' openaiSku='$(openAISku)'
      displayName: 'Deploy OpenAI service'